{
	"info": {
		"_postman_id": "naratama-library-api",
		"name": "Naratama Library API Testing",
		"description": "Testing collection untuk backend perpustakaan Naratama - PAW Project",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:5000/api",
			"type": "string"
		},
		{
			"key": "token",
			"value": "",
			"type": "string"
		},
		{
			"key": "userId",
			"value": "",
			"type": "string"
		},
		{
			"key": "bookId",
			"value": "",
			"type": "string"
		},
		{
			"key": "roomId",
			"value": "",
			"type": "string"
		},
		{
			"key": "borrowingId",
			"value": "",
			"type": "string"
		}
	],
	"item": [
        {
            "name": "0. SETUP - Seed Initial Data",
            "item": [
                {
                    "name": "Seed Naratama Data",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "pm.test('Data seeded successfully', function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "http://localhost:5000/seed-naratama-data",
                            "protocol": "http",
                            "host": [
                                "localhost"
                            ],
                            "port": "5000",
                            "path": [
                                "seed-naratama-data"
                            ]
                        },
                        "description": "Menjalankan endpoint ini pertama kali untuk mengisi database dengan data awal (initial data) untuk keperluan testing."
                    }
                }
            ]
        },
		{
			"name": "1. AUTH - Authentication",
			"item": [
				{
					"name": "Register Member",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    var jsonData = pm.response.json();",
									"    pm.collectionVariables.set('token', jsonData.data.token);",
									"    pm.collectionVariables.set('userId', jsonData.data.user.id);",
									"    pm.test('Registration successful', function () {",
									"        pm.expect(jsonData.success).to.be.true;",
									"        pm.expect(jsonData.data.user.isMember).to.be.true;",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"John Doe Member\",\n    \"email\": \"john.member@test.com\",\n    \"password\": \"password123\",\n    \"phoneNumber\": \"081234567890\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/auth/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"register"
							]
						}
					}
				},
				{
					"name": "Login Member",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    var jsonData = pm.response.json();",
									"    pm.collectionVariables.set('token', jsonData.data.token);",
									"    pm.test('Login successful', function () {",
									"        pm.expect(jsonData.success).to.be.true;",
									"        pm.expect(jsonData.data.token).to.not.be.empty;",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"john.member@test.com\",\n    \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					}
				},
				{
					"name": "Guest Login (Non-Member)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"phoneNumber\": \"081298765432\",\n    \"name\": \"Jane Guest\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/auth/guest-login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"guest-login"
							]
						}
					}
				},
				{
					"name": "Get Profile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/auth/profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"profile"
							]
						}
					}
				}
			]
		},
		{
			"name": "2. BOOKS - Manajemen Buku",
			"item": [
				{
					"name": "Get All Books",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    var jsonData = pm.response.json();",
									"    if (jsonData.data.books.length > 0) {",
									"        pm.collectionVariables.set('bookId', jsonData.data.books[0]._id);",
									"    }",
									"    pm.test('Books retrieved successfully', function () {",
									"        pm.expect(jsonData.success).to.be.true;",
									"        pm.expect(jsonData.data.books).to.be.an('array');",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/books?page=1&limit=10&available=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"books"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								},
								{
									"key": "available",
									"value": "true"
								}
							]
						}
					}
				},
				{
					"name": "Search Books",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/books?search=programming&category=Teknologi",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"books"
							],
							"query": [
								{
									"key": "search",
									"value": "programming"
								},
								{
									"key": "category",
									"value": "Teknologi"
								}
							]
						}
					}
				},
				{
					"name": "Get Book Detail",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/books/{{bookId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"books",
								"{{bookId}}"
							]
						}
					}
				},
				{
					"name": "Get New Arrivals",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/books/new-arrivals?days=30",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"books",
								"new-arrivals"
							],
							"query": [
								{
									"key": "days",
									"value": "30"
								}
							]
						}
					}
				},
				{
					"name": "Get Popular Books",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/books/popular",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"books",
								"popular"
							]
						}
					}
				},
				{
					"name": "Add Review to Book",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"rating\": 5,\n    \"comment\": \"Buku yang sangat bagus dan mudah dipahami. Sangat membantu untuk pembelajaran programming.\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/books/{{bookId}}/reviews",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"books",
								"{{bookId}}",
								"reviews"
							]
						}
					}
				}
			]
		},
		{
			"name": "3. BORROWING - Sistem Peminjaman",
			"item": [
				{
					"name": "Borrow Book - Bawa Pulang",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    var jsonData = pm.response.json();",
									"    pm.collectionVariables.set('borrowingId', jsonData.data.borrowing.id);",
									"    pm.test('Book borrowed successfully', function () {",
									"        pm.expect(jsonData.success).to.be.true;",
									"        pm.expect(jsonData.data.borrowing.borrowType).to.eql('Bawa Pulang');",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"bookId\": \"{{bookId}}\",\n    \"borrowType\": \"Bawa Pulang\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/borrowing/borrow",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"borrowing",
								"borrow"
							]
						}
					}
				},
				{
					"name": "Borrow Book - Baca di Tempat",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"bookId\": \"{{bookId}}\",\n    \"borrowType\": \"Baca di Tempat\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/borrowing/borrow",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"borrowing",
								"borrow"
							]
						}
					}
				},
				{
					"name": "Get My Borrowings",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/borrowing/my-borrowings?page=1&limit=10",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"borrowing",
								"my-borrowings"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						}
					}
				},
				{
					"name": "Get Active Borrowings",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/borrowing/active",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"borrowing",
								"active"
							]
						}
					}
				},
				{
					"name": "Return Book",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"borrowingId\": \"{{borrowingId}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/borrowing/return",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"borrowing",
								"return"
							]
						}
					}
				}
			]
		},
		{
			"name": "4. ROOMS - Manajemen Ruangan",
			"item": [
				{
					"name": "Get All Rooms",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    var jsonData = pm.response.json();",
									"    if (jsonData.data.rooms.length > 0) {",
									"        pm.collectionVariables.set('roomId', jsonData.data.rooms[0]._id);",
									"    }",
									"    pm.test('Rooms retrieved successfully', function () {",
									"        pm.expect(jsonData.success).to.be.true;",
									"        pm.expect(jsonData.data.rooms).to.be.an('array');",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/room",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"room"
							]
						}
					}
				},
				{
					"name": "Get Room Detail",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/room/{{roomId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"room",
								"{{roomId}}"
							]
						}
					}
				},
				{
					"name": "Check Available Rooms",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/room/available?date=2025-01-27&startTime=09:00&endTime=11:00&type=Diskusi Kecil",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"room",
								"available"
							],
							"query": [
								{
									"key": "date",
									"value": "2025-01-27"
								},
								{
									"key": "startTime",
									"value": "09:00"
								},
								{
									"key": "endTime",
									"value": "11:00"
								},
								{
									"key": "type",
									"value": "Diskusi Kecil"
								}
							]
						}
					}
				},
				{
					"name": "Book Room",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"roomId\": \"{{roomId}}\",\n    \"date\": \"2025-01-27\",\n    \"startTime\": \"09:00\",\n    \"endTime\": \"11:00\",\n    \"purpose\": \"Diskusi project programming untuk mata kuliah PAW\",\n    \"numberOfAttendees\": 4,\n    \"additionalRequests\": \"Mohon disediakan proyektor dan whiteboard\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/room/book",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"room",
								"book"
							]
						}
					}
				},
				{
					"name": "Get My Bookings",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/room/bookings/my?upcoming=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"room",
								"bookings",
								"my"
							],
							"query": [
								{
									"key": "upcoming",
									"value": "true"
								}
							]
						}
					}
				}
			]
		},
		{
			"name": "5. TEST SCENARIOS - Skenario Khusus",
			"item": [
				{
					"name": "Test - Borrow Same Book (Should Fail)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"bookId\": \"{{bookId}}\",\n    \"borrowType\": \"Bawa Pulang\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/borrowing/borrow",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"borrowing",
								"borrow"
							]
						}
					}
				},
				{
					"name": "Test - Book Room on Weekend (Should Fail)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"roomId\": \"{{roomId}}\",\n    \"date\": \"2025-01-26\",\n    \"startTime\": \"09:00\",\n    \"endTime\": \"11:00\",\n    \"purpose\": \"Test weekend booking\",\n    \"numberOfAttendees\": 2\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/room/book",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"room",
								"book"
							]
						}
					}
				},
				{
					"name": "Test - Invalid Book ID (Should Fail)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"bookId\": \"invalid-book-id-123\",\n    \"borrowType\": \"Bawa Pulang\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/borrowing/borrow",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"borrowing",
								"borrow"
							]
						}
					}
				},
				{
					"name": "Test - Unauthorized Access (Should Fail)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/borrowing/my-borrowings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"borrowing",
								"my-borrowings"
							]
						}
					}
				}
			]
		},
		{
			"name": "6. SYSTEM INFO",
			"item": [
				{
					"name": "Get API Info",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								""
							]
						}
					}
				}
			]
		}
	]
}